# shortcut to this dotfiles path is $ZSH
export ZSH=$HOME/.dotfiles

path=()
eval `/usr/libexec/path_helper -s`

path=(
  ~/bin
  $ZSH/bin
  $GOPATH/bin
  ~/.cabal/bin
  $path
)

fpath=(
  $ZSH/zsh/completions/src
  $ZSH/functions
  $ZSH/zsh
  $fpath
)

# Colors
autoload colors; colors
export LSCOLORS="exfxcxdxbxegedabagacad"
export LS_COLORS="exfxcxdxbxegedabagacad"
export CLICOLOR=true
export GREP_OPTIONS='--color=auto'
export GREP_COLOR='3;33'

if [[ "$OSTYPE" == darwin* ]]; then
  export BROWSER='open'
fi

export EDITOR='vim'
export HOMEBREW_EDITOR='vim'
export VISUAL='nano'
export PAGER='less'

autoload -U $ZSH/functions/*(:t)

HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=10000

unsetopt BG_NICE
unsetopt HUP

# Beeps
unsetopt BEEP
unsetopt LIST_BEEP
unsetopt HIST_BEEP

# History
setopt HIST_VERIFY
setopt APPEND_HISTORY
setopt SHARE_HISTORY
setopt INC_APPEND_HISTORY
setopt EXTENDED_HISTORY
setopt HIST_EXPIRE_DUPS_FIRST
setopt HIST_IGNORE_DUPS
setopt HIST_FIND_NO_DUPS
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_REDUCE_BLANKS

# Prompt
setopt PROMPT_SUBST

# Completion
setopt COMPLETE_IN_WORD
setopt LIST_AMBIGUOUS
setopt IGNORE_EOF
setopt AUTO_MENU
unsetopt MENU_COMPLETE
setopt ALWAYS_TO_END
setopt COMPLETE_ALIASES

# Pushd
setopt AUTO_PUSHD
setopt PUSHD_IGNORE_DUPS
setopt PUSHD_SILENT

zle -N newtab

bindkey "^K" kill-whole-line                      # ctrl-k
bindkey "^R" history-incremental-search-backward  # ctrl-r
bindkey "^A" beginning-of-line                    # ctrl-a
bindkey "^E" end-of-line                          # ctrl-e
bindkey "[B" history-search-forward               # down arrow
bindkey "[A" history-search-backward              # up arrow
bindkey "^D" delete-char                          # ctrl-d
bindkey "^F" forward-char                         # ctrl-f
bindkey "^B" backward-char                        # ctrl-b

# GRC colorizes nifty unix tools all over the place
if (( $+commands[grc] )) && (( $+commands[brew] ))
then
  source `brew --prefix`/etc/grc.bashrc
fi

export GIT_PROMPT_EXECUTABLE="haskell"
source $ZSH/zsh/prompt/prompt.zsh
source $ZSH/zsh/window.zsh

# Completions
autoload -U compinit; compinit
zmodload -i zsh/complist

zstyle ':vcs_info:*' actionformats '%F{5}(%f%s%F{5})%F{3}-%F{5}[%F{2}%b%F{3}|%F{1}%a%F{5}]%f '
zstyle ':vcs_info:*' formats '%F{5}(%f%s%F{5})%F{3}-%F{5}[%F{2}%b%F{5}]%f '
zstyle ':vcs_info:*' enable git

# matches case insensitive for lowercase
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'

# pasting with tabs doesn't perform completion
zstyle ':completion:*' insert-tab pending

# Aliases
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias la='ls -a'
alias ll='ls -lh'
alias lla='ls -lah'
alias ducks='du -hcksx * | sort -nr'

alias pgstop='launchctl unload ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist'
alias pgstart='launchctl load ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist'
alias pgrestart='pgstop; pgstart'

# Go
export GOPATH=~/dev/go

# Python
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
export VIRTUAL_ENV_DISABLE_PROMPT=1
if which pyenv > /dev/null; then eval "$(pyenv init -)"; fi
if which pyenv-virtualenv-init > /dev/null; then eval "$(pyenv virtualenv-init -)"; fi

# Google cloud
source '/usr/local/google-cloud-sdk/path.zsh.inc'
source '/usr/local/google-cloud-sdk/completion.zsh.inc'

# Docker
eval "$(docker-machine env default)"
